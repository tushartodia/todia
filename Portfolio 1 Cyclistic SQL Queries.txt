-----------------------------------------------------------------------------------------------------
-- TO KNOW THE OVERALL OF THE DATA 
SELECT *
FROM CyclistProject..Trip202306;
-- To know what are the bicycle's types
SELECT
	DISTINCT(rideable_type)
FROM CyclistProject..Trip202306;
-- 3 types: electric, classic, and docked bike

-- To know what are the membership's types
SELECT
	DISTINCT(member_casual)
FROM CyclistProject..Trip202306
-- 2 types: member and casual

-----------------------------------------------------------------------------------------------------
-- TABLE JUNE 2023

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202306 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202306 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202306 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202306 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202306
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE MAY 2023

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202305 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202305 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202305 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202305 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202305
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE APRIL 2023

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202304 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202304 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202304 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202304 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202304
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE MARCH 2023

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202303 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202303 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202303 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202303 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202303
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE FEBRUARY 2023

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202302 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202302 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202302 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202302 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202302
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE JANUARY 2023

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202301 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202301 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202301 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202301 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202301
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE DECEMBER 2022

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202212 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202212 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202212 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202212 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202212
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE NOVEMBER 2022

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202211 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202211 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202211 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202211 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202211
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE OCTOBER 2022

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202210 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202210 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202210 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202210 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202210
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE SEPTEMBER 2022

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202209 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202209 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202209 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202209 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202209
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE AUGUST 2022

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202208 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202208 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202208 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202208 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202208
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
-- TABLE JULY 2022

-- To know the average ride length for member and casual riders
SELECT 
	DISTINCT(member_casual) AS Membership,
	CAST(DATEADD( ms,AVG(CAST(DATEDIFF( ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) as BIGINT)), '00:00:00' )  as TIME) as 'AVG Time'
FROM CyclistProject..Trip202207 a
GROUP BY member_casual;

-- To know the average ride length based on days
SELECT
    day_of_week AS Days,
    CAST(DATEADD(ms, AVG(CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT)), '00:00:00') AS TIME) AS 'AVG Time Member',
    CAST(DATEADD(ms, AVG(CASE WHEN member_casual = 'casual' THEN CAST(DATEDIFF(ms, '00:00:00', ISNULL(a.ride_length, '00:00:00')) AS BIGINT) END), '00:00:00') AS TIME) AS 'AVG Time Casual'
FROM CyclistProject..Trip202207 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by days
SELECT
	DISTINCT(day_of_week) AS Days,
	COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS Member,
	COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS Casual
FROM CyclistProject..Trip202207 a
GROUP BY day_of_week
ORDER BY day_of_week;

-- How many users ride the bike by type of memberships
SELECT
	DISTINCT(member_casual) AS Membership,
	COUNT(ride_id)
FROM CyclistProject..Trip202207 a
GROUP BY member_casual;


-- How many users ride the bike by type of bike
SELECT
    rideable_type AS BikeType,
    COUNT(CASE WHEN member_casual = 'member' THEN 1 END) AS MemberCount,
    COUNT(CASE WHEN member_casual = 'casual' THEN 1 END) AS CasualCount
FROM CyclistProject..Trip202207
GROUP BY rideable_type;

-----------------------------------------------------------------------------------------------------
